    openapi: 3.0.3
    info:
      title: Connectivity Insights API
      version: '0.3.0-wip'
      contact: 
       email: sp-coi@lists.camaraproject.org
      license:
         name: Apache 2.0
         url: https://www.apache.org/licenses/LICENSE-2.0.html
      description: |
        The Connectivity Insights API allows an application developer to ask
         the network the likelihood that an application's networking
         requirements can be met for a given end user session.
        
        This information helps a developer ensure their end users are able to
         get the best experience while using the application over their current
          network.
          
        Depending on the answer the network gives, the developer may decide to
         request a network boost (via the CAMARA QoD API) , and/or apply
          specific changes on the application side e.g. adjusting the
          resolution of the video stream upwards or downwards.
        
        # Introduction


        # Relevant terms and definitions

        * **Identifier for the device**:
        At least one identifier for the device (user equipment) out of four
         options: IPv4 address, IPv6 address, Phone number, or Network Access
          Identifier assigned by the mobile network operator for the device.

        * **Identifier for the application server**:
        IPv4 and/or IPv6 address of the application server (application backend)

        * **Notification URL and token**:
        Developers may provide a callback URL on which notifications can be
         received from the service provider. This is an optional parameter.

        # API functionality

    
        Following diagram shows the interaction between different components (**editor note replace with Mermaid**)
        ![Sequence Diagram](https://github.com/camaraproject/ConnectivityInsights/blob/main/documentation/API_documentation/sequenceDiagram.v1.png)
        
        # Authorization and authentication

        CAMARA guidelines defines a set of authorization flows which can grant API
        clients access to the API functionality, as outlined in the document
        [CAMARA-API-access-and-user-consent.md]
        (https://github.com/camaraproject/IdentityAndConsentManagement/blob/main/documentation/CAMARA-API-access-and-user-consent.md).
        Which specific authorization flows are to be used will be determined during
        onboarding process, happening between the API Client and the Telco Operator
        exposing the API, taking into account the declared purpose for accessing
        the API, while also being subject to the prevailing legal framework
        dictated by local legislation.

        It is important to remark that in cases where personal user data is
        processed by the API, and users can exercise their rights through
        mechanisms such as opt-in and/or opt-out, the use of 3-legged access tokens
        becomes mandatory. This measure ensures that the API remains in strict
        compliance with user privacy preferences and regulatory obligations,
        upholding the principles of transparency and user-centric data control.

    servers:
    - url: "{apiRoot}/{basePath}"
      variables:
        apiRoot:
          default: http://localhost:9091
          description: API root
        basePath:
          default: connectivity-insights/v0
          description: Base path for the Connectivity Insights API

    tags:
    - name: Connectivity Insights
      description: Read information about the network the client is currently attached to.
    - name: Quality Insights
      description: Read the network's level of confidence that it can meet the quality thresholds for a given application profile and end user device.
    - name: Application Profiles
      description: Operations to define, read and manage an application's thresholds for network quality (latency, jitter, loss, throughput)
    - name: Notifications Management
      description: Create and manage a subscription to receive periodic connectivity insights
   
   
    paths:
      /network-info/insights:
        post:
          security:
          - openId:
            - connectivity_insights:network_info:read
          tags:
          - Connectivity Insights
          description: Determine the type of network the given device is connected to, and if it is a cellular network, the network identity and connectivity type (3G/4G/5G)
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/NetworkQualityInsight'
                      
      /network-quality/insights:
        post:
          security:
          - openId:
            - connectivity_insights:network_quality_insight:write
          tags:
          - Quality Insights
          description: Create an insight. The response shows the network's current level of confidence that it can meet an application profile's quality thresholds for a given end user device. An `insightId` is included to support polling via the GET operation, or to requrest callbacks via the Notification Management operations.
          operationId: createPolicy
          requestBody:
            description: An `ApplicationProfileId` and one or more device identifiers. Together these allow the network to calculate whether the thresholds defined in the application profile can be met for the particular connected device.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/NetworkQualityInsightRequest'
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/NetworkQualityInsight'
                      
      /network-quality/insights/{insightId}:
        get:
          security:
          - openId:
            - connectivity_insights:network_quality_insight:read
          tags:
          - Quality Insights
          description: Read an insight. This allows for polling to see if the network's level of confidence to meet the application profile has changed, alternatively, use the Notifications Management operations to receive callbacks.
          parameters:
            - name: insightId
              in: path
              description: Identifier for an insight
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/NetworkQualityInsight'
                      
        delete:
          security:
          - openId:
            - connectivity_insights:network_quality_insight:write
          tags:
          - Quality Insights
          description: Delete an insight
          parameters:
            - name: insightId
              in: path
              description: Identifier for a
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: policy has been deleted
                      
      /application-profiles:
        post:
          security:
          - openId:
            - connectivity_insights:application_profile:write
          tags:
          - Application Profiles
          description: Define the network quality thresholds that the application needs to deliver an acceptable user experience.
          requestBody:
            description: List of network quality thresholds that the application needs to deliver an acceptable user experience.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/CreateApplicationProfile'
            required: true
          responses:
            "201":
              description: Created
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ApplicationProfile'



      /application-profiles/{applicationProfileId}:
        put:
          security:
          - openId:
            - connectivity_insights:application_profile:write
          tags:
          - Application Profiles
          description: Update the network quality thresholds for an application that ensure good end user experience
          parameters:
            - name: applicationProfileId
              in: path
              description: Identifier for the Aplpication Profile
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          requestBody:
            description: Update the network quality thresholds that the application needs to deliver an acceptable user experience.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/ApplicationProfile'
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ApplicationProfile'
        get:
          security:
          - openId:
            - connectivity_insights:application_profile:read
          tags:
          - Application Profiles
          description: Read an Application Profile
          parameters:
            - name: applicationProfileId
              in: path
              description: Identifier for the Application Profile
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/ApplicationProfile'
        delete:
          security:
          - openId:
            - connectivity_insights:application_profile:write
          tags:
          - Application Profiles
          description: delete
          parameters:
            - name: applicationProfileId
              in: path
              description: subscription Id
              required: true
              style: simple
              explode: false
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: policy has been deleted

      /subscriptions:
        post:
          security:
          - openId:
            - connectivity_insights:subscription:write
          tags:
          - Notifications Management
          description: Subscription for monitoring network condition against specific intents for an individual device.
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/user_subscription'
            required: true
          responses:
            "201":
              description: Created
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription_response'


      /subscriptions/{subscriptionId}:
        put:
          security:
          - openId:
            - connectivity_insights:subscription:write
          tags:
          - Notifications Management
          description: Subscription for monitoring network condition of individual device.
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          requestBody:
            description: List of user object
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/user_subscription'
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription_response'
        get:
          security:
          - openId:
            - connectivity_insights:subscription:read
          tags:
          - Notifications Management
          description: get the user subscription
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                      $ref: '#/components/schemas/user_subscription'
        delete:
          security:
          - openId:
            - connectivity_insights:subscription:write
          tags:
          - Notifications Management
          description: delete
          parameters:
          - name: subscriptionId
            in: path
            description: subscription Id
            required: true
            style: simple
            explode: false
            schema:
              type: string
              format: uuid
          responses:
            "200":
              description: OK

    components:
      securitySchemes:
        openId:
          type: openIdConnect
          openIdConnectUrl: .well-known/openid-configuration
        
      schemas:
        Duration:
          type: object
          properties:
            value:
              type: integer
              example: 12
              format: int32
              minimum: 1
            unit:
              allOf:
                - $ref: "#/components/schemas/TimeUnitEnum"
                - example: Minutes
    
        TimeUnitEnum:
          type: string
          enum:
            - Days
            - Hours
            - Minutes
            - Seconds
            - Milliseconds
            - Microseconds
            - Nanoseconds
          
        Rate:
          type: object
          properties:
            value:
              type: integer
              example: 10
              format: int32
              minimum: 0
              maximum: 1024
            unit:
              $ref: "#/components/schemas/RateUnitEnum"
              
        RateUnitEnum:
          type: string
          enum:
            - bps
            - kbps
            - Mbps
            - Gbps
            - Tbps
        
        packetDelayBudget:
          description: |
            The packet delay budget is the maximum allowable one-way latency between the customer's device
            and the gateway from the operator's network to other networks. By limiting the delay, the network
            can provide an acceptable level of performance for various services, such as voice calls,
            video streaming, and data.
            The end-to-end or round trip latency will be about two times this value plus the latency not controlled
            by the operator
          allOf:
            - $ref: "#/components/schemas/Duration"
            
        packetErrorLossRate:
          type: integer
          description: |
            The exponential power of the allowable error loss rate 10^(-N).
            For instance 3 would be an error loss rate of 10 to the power of -3 (0.001)

            For 5G network the 3GPP specification TS 23.203 defines the packet error loss rate QCI attribute. It
            describes the Quality of Service (QoS) Class Identifier (QCI) parameters used to
            differentiate traffic classes in mobile networks, ensuring appropriate resource
            allocation and performance for various services.

            The packet error loss rate is one of the QCI attributes, providing information on the
            acceptable packet loss rate for a specific traffic class. This attribute helps maintain
            the desired performance level for services like voice calls, video streaming, or data
            transfers within the 3GPP mobile network.
          format: int32
          minimum: 1
          maximum: 10
          example: 3
          
        jitter:
          description: |
            The jitter requirement aims to limit the maximum variation in round-trip
            packet delay for the 99th percentile of traffic, following ITU Y.1540
            standards. It considers only acknowledged packets in a session, which are
            packets that receive a confirmation of receipt from the recipient (e.g.,
            using TCP). This requirement helps maintain consistent latency, essential
            for real-time applications such as VoIP, video calls, and gaming.
          allOf:
            - $ref: "#/components/schemas/Duration"
          
        targetMinDownstreamRate:
          description: |
            This is the target minimum downstream rate.
          allOf:
            - $ref: "#/components/schemas/Rate"
            
        targetMinUpstreamRate:
          description: |
            This is the target minimum upstream rate.
          allOf:
            - $ref: "#/components/schemas/Rate"
          
        additionalKPIs:
          type: object
          properties:
            signalStrength:
              type: string
              enum:
                - excellent
                - good
                - fair
                - poor
                - no signal
            connectivityType:
              type: string
              enum:
              - 5G
              - 4G
              - 3G

        CreateApplicationProfile:
         type: object
         properties:
          networkQualityThresholds:
             $ref: "#/components/schemas/NetworkQualityThresholds"
             
        ApplicationProfile:
         type: object
         properties:
          applicationProfileId:
             type: string
             format: uuid
          networkQualityThresholds:
             $ref: "#/components/schemas/NetworkQualityThresholds"

        NetworkQualityThresholds:
         type: object
         properties:
           packetDelayBudget:
             $ref: '#/components/schemas/packetDelayBudget'
           targetMinDownstreamRate:
             $ref: '#/components/schemas/targetMinDownstreamRate'
           targetMinUpstreamRate:
             $ref: '#/components/schemas/targetMinUpstreamRate'
           packetlossErrorRate:
             $ref: '#/components/schemas/packetErrorLossRate'
           jitter:
             $ref: '#/components/schemas/jitter'
             
        NetworkQualityInsight:
          type: object
          properties:
            applicationProfileId:
              type: string
              format: uuid
            packetDelayBudget:
               $ref: '#/components/schemas/thresholdFulfillmentConfidence'
            targetMinDownstreamRate:
               $ref: '#/components/schemas/thresholdFulfillmentConfidence'
            targetMinUpstreamRate:
               $ref: '#/components/schemas/thresholdFulfillmentConfidence'
            packetlossErrorRate:
               $ref: '#/components/schemas/thresholdFulfillmentConfidence'
            jitter:
               $ref: '#/components/schemas/thresholdFulfillmentConfidence'
            additionalKPIs:
               $ref: '#/components/schemas/additionalKPIs'
               
        thresholdFulfillmentConfidence:
          type: string
          enum:
            - good
            - bad

        policy_subscription_response:
          type: object
          properties:
            policyId:
              type: string
              format: uuid

        NetworkQualityInsightRequest:
           type: object
           properties:
            applicationProfileId:
              $ref: "#/components/schemas/ApplicationProfileId"
            device:
              $ref: "#/components/schemas/Device"
            monitoringDataAggregation:
              enum:
                - FIFTEEN_MIN
                - HOURLY
                - DAILY
            monitoringTimeStamp:
              type: string
              format: date-time
              description: this is a optional input parameter. A future data and time can be provided for predictive data. If no value is provided then the current date and
                time is used and network data for the monitoring data aggregation is used to check network performance against the policy defined.
   
        ApplicationProfileId:
          type: string
          format: uuid

        user_subscription:
           type: object
           properties:
            device:
              $ref: "#/components/schemas/Device"
            applicationServer:
              $ref: "#/components/schemas/ApplicationServer"
            policyId:
              type: string
              format: uuid
            monitoringFrequency:
              enum:
                - FIFTEEN_MIN
                - HOURLY
                - DAILY
            notificationExpiry:
              $ref: "#/components/schemas/notificationExpiry"
            notificationUrl:
              $ref: "#/components/schemas/notificationUrl"

        notificationExpiry:
          type: object
          minProperties: 1
          properties:
            expiryTime:
              description: Date and time when this subscription will be expired. This parameter is mutually exclusive with the maximumNumberOfNotifications parameter. Either maximumNumberOfNotifications or expiryTime must be provided.
              type: string
              format: date-time
              nullable: true
            maximumNumberOfNotifications:
              description: Identifies the maximum number of event notifications to be sent. This parameter is mutually exclusive with the expiryTime parameter. Either maximumNumberOfNotifications or expiryTime must be provided.
              type: integer
              format: int32
              nullable: true
        
        Device:
          description: |
            End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.
    
            The developer can choose to provide the below specified device identifiers:
    
            * `ipv4Address`
            * `ipv6Address`
            * `phoneNumber`
            * `networkAccessIdentifier`
    
            NOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device
          type: object
          properties:
            phoneNumber:
              $ref: "#/components/schemas/PhoneNumber"
            networkAccessIdentifier:
              $ref: "#/components/schemas/NetworkAccessIdentifier"
            ipv4Address:
              $ref: "#/components/schemas/DeviceIpv4Addr"
            ipv6Address:
              $ref: "#/components/schemas/DeviceIpv6Address"
          minProperties: 1
    
        ApplicationServer:
          description: |
            A server hosting backend applications to deliver some business logic to clients.
    
            The developer can choose to provide the below specified device identifiers:
    
            * `ipv4Address`
            * `ipv6Address`
          type: object
          properties:
            ipv4Address:
              $ref: "#/components/schemas/ApplicationServerIpv4Address"
            ipv6Address:
              $ref: "#/components/schemas/ApplicationServerIpv6Address"
          minProperties: 1
    
        NetworkAccessIdentifier:
          description: A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.
          type: string
          example: "123456789@domain.com"
    
        PhoneNumber:
          description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, optionally prefixed with '+'.
          type: string
          pattern: '^\+?[0-9]{5,15}$'
          example: "123456789"
    
        DeviceIpv4Addr:
          type: object
          description: |
            The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).
    
            If the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.
    
            If NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)
    
            In all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.
          properties:
            publicAddress:
              $ref: "#/components/schemas/SingleIpv4Addr"
            privateAddress:
              $ref: "#/components/schemas/SingleIpv4Addr"
            publicPort:
              $ref: "#/components/schemas/Port"
          anyOf:
            - required: [publicAddress, privateAddress]
            - required: [publicAddress, publicPort]
          example:
            {
              "publicAddress": "84.125.93.10",
              "publicPort": 59765
            }
    
        SingleIpv4Addr:
          description: A single IPv4 address with no subnet mask
          type: string
          format: ipv4
          example: "84.125.93.10"
    
        DeviceIpv6Address:
          description: |
            The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).
    
            The session shall apply to all IP flows between the device subnet and the specified application server, unless further restricted by the optional parameters devicePorts or applicationServerPorts.
          type: string
          format: ipv6
          example: 2001:db8:85a3:8d3:1319:8a2e:370:7344
    
        ApplicationServerIpv4Address:
          type: string
          example: "192.168.0.1/24"
          description: |
            IPv4 address may be specified in form <address/mask> as:
              - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.
              - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.
                In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version.
    
        ApplicationServerIpv6Address:
          type: string
          example: "2001:db8:85a3:8d3:1319:8a2e:370:7344"
          description: |
            IPv6 address may be specified in form <address/mask> as:
              - address - The /128 subnet is optional for single addresses:
                - 2001:db8:85a3:8d3:1319:8a2e:370:7344
                - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128
              - address/mask - an IP v6 number with a mask:
                - 2001:db8:85a3:8d3::0/64
                - 2001:db8:85a3:8d3::/64
                
        Port:
          description: TCP or UDP port number
          type: integer
          minimum: 0
          maximum: 65535

        notificationUrl:
          type: object
          properties:
            callback_url:
              type: string
              format: uri
              example: "https://application-server.com"
              description: Allows asynchronous delivery of session related events
            notificationAuthToken:
              type: string
              example: "c8974e592c2fa383d4a3960714"
              description: Authentication token for callback API

        user_subscription_response:
           type: object
           properties:
             subscriptionId:
               type: string
               format: uuid
